#include "EmonLib.h"
#include <SPI.h>
#include <Ethernet.h>

 //CANAL 1
bool enviaInfoCanal1 = false;
unsigned long offsetCanal1 = 0;
String correnteCanal1;
double potenciaCanal1;

//CANAL 2
bool enviaInfoCanal2 = false;
unsigned long offsetCanal2 = 0;
String correnteCanal2;
double potenciaCanal2;

//CANAL 3
bool enviaInfoCanal3 = false;
unsigned long offsetCanal3 = 0;
String correnteCanal3;
double potenciaCanal3;

//ETHERNET
EthernetClient client;
byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };
char server[] = "191.252.202.70";
IPAddress ip(191, 252, 202, 70);
IPAddress myDns(192, 168, 0, 1);

/**
 * Incializa a Biblioteca do EnergyMonitor, para ser utilizada 
 * posteriormente. Utiliza nos Transformadores de corrente
 */
EnergyMonitor canal1;
EnergyMonitor canal2;
EnergyMonitor canal3;

void setup() {
  
  Serial.begin(9600);
  
  canal1.current(1, 40); // Corrente: (Pino analógico, Calibração) - Canal 1
  canal2.current(2, 40); // Corrente: (Pino analógico, Calibração) - Canal 2
  canal3.current(3, 40); // Corrente: (Pino analógico, Calibração) - Canal 3

  /**
   * Inicializa a conexão Ethernet
   */
  Serial.println("Inicializando Ethernet com DHCP:");
  if (Ethernet.begin(mac) == 0) {
    Serial.println("Falha ao configurar a Ethernet usando o DHCP");
    /**
     * Verifica se existe um hardware Ethernet conectado
     */
    if (Ethernet.hardwareStatus() == EthernetNoHardware) {
      Serial.println("O módulo Ethernet não foi encontrado. Desculpe, não é possível executar sem hardware. :(");
      while (true) {
        delay(1); 
      }
    }
    if (Ethernet.linkStatus() == LinkOFF) {
      Serial.println("O cabo Ethernet não está conectado.");
    }
    /**
     * Tenta Configurar usando o IP em vez do DHCP
     */
    Ethernet.begin(mac, ip, myDns);
  } else {
    Serial.print("  IP atribuído como DHCP ");
    Serial.println(Ethernet.localIP());
  }

    /**
   * Espera-se um segundo para que o Modulo Ethernet seja 
   * inicializado.
   */
  delay(1000);
  Serial.print("Conectando em ");
  Serial.print(server);
  Serial.println("...");
}

void loop() {
  
  //CANAL 1
  double IrmsCanal1 = canal1.calcIrms(1480);
  double PotenciaCanal1 = IrmsCanal1*230.0;
  String nomeCanal1;
  String tensaoCanal1;

  long tempoUsoCanal1;
  
  if(IrmsCanal1 < 0.15){
    if(enviaInfoCanal1){
      String nomeCanal1 = "Microondas";
      String tensaoCanal1 = "127";
      long tempoUsoCanal1 = millis() - offsetCanal1;
      Serial.println("CANAL 1 ================ Tensao:"+  tensaoCanal1 +" Corrente: "+ correnteCanal1 +" Potencia: "+ potenciaCanal1 + " Tempo Uso: "+ tempoUsoCanal1);

      if (client.connect(server, 8080)) {
        Serial.print("Conectando em ");
        Serial.println(client.remoteIP());
        // Make a HTTP request:
        client.println("GET /consumo/incluir/"+nomeCanal1+"/"+tensaoCanal1+"/"+correnteCanal1+"/"+potenciaCanal1+"/2019-07-20/"+tempoUsoCanal1+"/200 HTTP/1.1");
        client.print("HOST: ");
        client.println(server);
        client.println("Conexão: concluída");
        client.println();
        client.stop();
      } else {
        Serial.println("Falha na Conexão");
      }
   
      enviaInfoCanal1 = false; 
    }
  }else {
      //Montando dados do consumo
      if(!enviaInfoCanal1){
        offsetCanal1 = millis();
      }
      correnteCanal1 = IrmsCanal1;
      potenciaCanal1 = PotenciaCanal1;
      enviaInfoCanal1 = true;
  }


  //CANAL 2
  double IrmsCanal2 = canal2.calcIrms(1480);
  double PotenciaCanal2 = IrmsCanal2*230.0;
  String nomeCanal2;
  String tensaoCanal2;
  
  if(IrmsCanal2 < 0.15){
    if(enviaInfoCanal2){
      String nomeCanal2 = "Geladeira";
      String tensaoCanal2 = "127";
      long tempoUsoCanal2 = millis() - offsetCanal2;
      Serial.println("CANAL 2 ================ Tensao:"+  tensaoCanal2 +" Corrente: "+ correnteCanal2 +" Potencia: "+ potenciaCanal2 + " Tempo Uso: "+ tempoUsoCanal2);
      
      if (client.connect(server, 8080)) {
        Serial.print("Conectando em ");
        Serial.println(client.remoteIP());
        // Make a HTTP request:
        client.println("GET /consumo/incluir/"+nomeCanal2+"/"+tensaoCanal2+"/"+correnteCanal2+"/"+potenciaCanal2+"/2019-07-20/"+tempoUsoCanal2+"/200 HTTP/1.1");
        client.print("HOST: ");
        client.println(server);
        client.println("Conexão: concluída");
        client.println();
        client.stop();
      } else {
        Serial.println("Falha na Conexão");
      }
      
      enviaInfoCanal2 = false; 
    }
  }else {
      //Montando dados do consumo
      if(!enviaInfoCanal2){
        offsetCanal2 = millis();
      }
      correnteCanal2 = IrmsCanal2;
      potenciaCanal2 = PotenciaCanal2;
      enviaInfoCanal2 = true;
  }


  //CANAL 3
  double IrmsCanal3 = canal3.calcIrms(1480);
  double PotenciaCanal3 = IrmsCanal3*230.0;
  String nomeCanal3;
  String tensaoCanal3;
  
  if(IrmsCanal3 < 0.15){
    if(enviaInfoCanal3){
      String nomeCanal3 = "Ar Condicionado";
      String tensaoCanal3 = "127";
      long tempoUsoCanal3 = millis() - offsetCanal3;
      Serial.println("CANAL 3 ================ Tensao:"+  tensaoCanal3 +" Corrente: "+ correnteCanal3 +" Potencia: "+ potenciaCanal3 + " Tempo Uso: "+ tempoUsoCanal3);

      if (client.connect(server, 8080)) {
        Serial.print("Conectando em ");
        Serial.println(client.remoteIP());
        // Make a HTTP request:
        client.println("GET /consumo/incluir/"+nomeCanal3+"/"+tensaoCanal3+"/"+correnteCanal3+"/"+potenciaCanal3+"/2019-07-20/"+tempoUsoCanal3+"/200 HTTP/1.1");
        client.print("HOST: ");
        client.println(server);
        client.println("Conexão: concluída");
        client.println();
        client.stop();
      } else {
        Serial.println("Falha na Conexão");
      }
      
      enviaInfoCanal3 = false; 
    }
  }else {
      //Montando dados do consumo
      if(!enviaInfoCanal3){
        offsetCanal3 = millis();
      }
      correnteCanal3 = IrmsCanal3;
      potenciaCanal3 = PotenciaCanal3;
      enviaInfoCanal3 = true;
  }
}